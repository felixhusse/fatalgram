version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  media_data: {}
  static_data: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: fatalgram_production_django
    platform: linux/x86_64
    volumes:
      - media_data:/app/deployment/media:z
      - static_data:/app/deployment/static:z
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  nginx:
    container_name: fatalgram_production_nginx
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: nginx
    restart: always
    depends_on:
      - django
    ports:
      - "80:80"
    volumes:
      - media_data:/app/deployment/media:z
      - static_data:/app/deployment/static:z

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: fatalgram_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:Z
      - production_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.production/.postgres

  redis:
    image: redis:6

  celeryworker:
    <<: *django
    image: fatalgram_production_celeryworker
    command: /start-celeryworker
    ports: []

  celerybeat:
    <<: *django
    image: fatalgram_production_celerybeat
    command: /start-celerybeat
    ports: []

  flower:
    <<: *django
    image: fatalgram_production_flower
    command: /start-flower
    ports: []
